generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String  @id @default(uuid())
  shop          String
  state         String
  isOnline      Boolean @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        Int?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean @default(false)
  locale        String?
  collaborator  Boolean @default(false)
  emailVerified Boolean @default(false)
}

model CustomerToken {
  id             String   @id @default(uuid())
  conversationId String
  accessToken    String
  refreshToken   String?
  expiresAt      DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([conversationId])
}

model CodeVerifier {
  id        String   @id @default(uuid())
  state     String   @unique
  verifier  String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Conversation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Message[]
}

model Message {
  id            String   @id @default(uuid())
  conversationId String
  role          String
  content       String
  createdAt     DateTime @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId])
}

model CustomerAccountUrl {
  id             String   @id @default(uuid())
  conversationId String   @unique
  url            String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
