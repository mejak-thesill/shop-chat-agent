// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id            String    @id @db.Text
  shop          String    @db.Text
  state         String    @db.Text
  isOnline      Boolean   @default(false)
  scope         String?   @db.Text
  expires       DateTime?
  accessToken   String?   @db.Text
  userId        BigInt?
  firstName     String?   @db.Text
  lastName      String?   @db.Text
  email         String?   @db.Text
  accountOwner  Boolean   @default(false)
  locale        String?   @db.Text
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model CustomerToken {
  id             String   @id @db.Text
  conversationId String   @db.Text
  accessToken    String   @db.Text
  refreshToken   String?  @db.Text
  expiresAt      DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@index([conversationId], name: "idx_customerToken_conversationId")
}

model CodeVerifier {
  id        String   @id @db.Text
  state     String   @unique @db.Text
  verifier  String   @db.Text
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([state], name: "idx_codeVerifier_state")
}

model Conversation {
  id        String    @id @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  Message   Message[]
}

model Message {
  id             String   @id @db.Text
  conversationId String   @db.Text
  role           String   @db.Text
  content        String
  createdAt      DateTime @default(now())

  Conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([conversationId], name: "idx_message_conversationId")
}

model CustomerAccountUrl {
  id             String   @id @db.Text
  conversationId String   @unique @db.Text
  url            String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}
